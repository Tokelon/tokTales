// tokTales-core-library build.gradle
group "com.tokelon.toktales"
version "0.0.6"


buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"
	}
}


// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: "com.github.spotbugs"


sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'tools/main/java'
			
			srcDir 'exp/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
			srcDir 'tools/test/java'
		}
	}
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"


dependencies {
	/* This causes cyclic dependency errors in Eclipse.
	 * Eclipse, as opposed to Gradle, does not understand that the dependency is only for the tests.
	 *
	 * The current workaround is to change the error to a warning, as described here:
	 * https://github.com/eclipse/buildship/issues/460
	 */
	testImplementation project(':tokTales-core-test')
	
	
	// LuaJ
	implementation 'org.luaj:luaj-jse:3.0.1'
	
	// XStream
	implementation 'com.thoughtworks.xstream:xstream:1.4.8'
	
	// Guice
	api 'com.google.inject:guice:4.2.1'
	api 'com.google.inject.extensions:guice-assistedinject:4.2.1'
	
	/* Guava
	 * Do NOT update to v27.0, it does NOT work with the Android plugin right now at all, not even when jre dependencies are overridden.
	 * There are duplicate class errors and the lint task gets stuck and never finishes.
	 */
	api 'com.google.guava:guava:26.0-android' // This will override the version provided by Guice
	
	
	/* JOML
	 * Updating to >= v1.8.0 is problematic for two reasons:
	 * 1. Compatibility with Android (> v1.8.6) is questionable - it works,
	 * but compiles with lots of warnings / other versions do not compile at all
	 * 2. On Desktop it always crashes immediately because of STBTruetype.stbtt_GetCodepointBitmap,
	 * this will have to be fixed anyway but not right now.
	 *
	 * This version might be preferable anyways,
	 * no natives, no weird backporting for Java 1.2/1.3 etc.
	 */
	//api 'org.joml:joml:1.8.0'
	api 'org.joml:joml:1.8.6'
	
	// Streamsupport
	api 'net.sourceforge.streamsupport:android-retrostreams:1.6.3'
	api 'net.sourceforge.streamsupport:android-retrofuture:1.6.3'
	//api 'net.sourceforge.streamsupport:android-retroatomic:1.6.3'
	//api 'net.sourceforge.streamsupport:android-retroflow:1.6.3'
	
	// Trove
	api 'net.sf.trove4j:trove4j:3.0.3'
	
	// SLF4J
	api 'org.slf4j:slf4j-api:1.7.28'
	/* Add binding in project for actual logging:
	implementation 'org.slf4j:slf4j-log4j12:1.7.28' // Log4j
	implementation 'org.slf4j:slf4j-simple:1.7.28' // Simple
	implementation 'org.slf4j:slf4j-nop:1.7.28' // NOOP
	*/
}


// Export project and dependencies for Android
eclipse.classpath.file.withXml { xml ->
	def node = xml.asNode()
	
	def con = node.children().find( {it.@path == "org.eclipse.buildship.core.gradleclasspathcontainer"} )
	if(con) {
		con.@exported = 'true'
	}
}


checkstyle {
	toolVersion = '8.23' // important - old versions might not support config
	ignoreFailures = true
	
	configFile rootProject.file('../tokTales-master/config/checkstyle/checkstyle.xml') // adjust if needed
	
	/* Remove * to enable Checkstyle */
	checkstyleMain.enabled = false
	checkstyleTest.enabled = false
	/**/
}

pmd {
	toolVersion = '6.17.0' // important - old versions might not support config
	ignoreFailures = true
	
	//ruleSetConfig = resources.text.fromFile(rootProject.file('../tokTales-master/config/pmd/pmd.xml'))
	ruleSetFiles = files('../../tokTales-master/config/pmd/pmd.xml')
	
	/* Remove * to enable PMD */
	pmdMain.enabled = false
	pmdTest.enabled = false
	/**/
}

spotbugs {
	toolVersion = '3.1.12' // important - old versions might not support config
	ignoreFailures = true
	
	/* Remove * to enable Spotbugs */
	spotbugsMain.enabled = false
	spotbugsTest.enabled = false
	/**/
}
