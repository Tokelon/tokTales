// tokTales-core build.gradle
group "com.tokelon.toktales"
version "0.0.6"


// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

apply plugin: 'eclipse'

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'tools/main/java'
			
			srcDir 'libs/JOML/src'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
			srcDir 'tools/test/java'
			
			srcDir 'libs/JOML/test'
		}
	}
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    // Mockito
    testImplementation 'org.mockito:mockito-core:2.13.0'
    

	// LuaJ
	implementation files('libs/Luaj/luaj-jse-3.0.1.jar')

	// XStream
    implementation files('libs/XStream/xstream-1.4.8.jar')
	runtime files('libs/XStream/xpp3_min-1.1.4c.jar')

    // Guice
    api 'com.google.inject:guice:4.1.0:no_aop'
    // extensions require aop version, disable with transitive false
    api ('com.google.inject.extensions:guice-assistedinject:4.1.0') {
		transitive = false
	}
	api ('com.google.inject.extensions:guice-multibindings:4.1.0') {
    	transitive = false
    }
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


// Export project and dependencies for Android
eclipse.classpath.file.withXml { xml ->
    def node = xml.asNode()
    
    def con = node.children().find( {it.@path == "org.eclipse.buildship.core.gradleclasspathcontainer"} )
    con.@exported = 'true'
}
